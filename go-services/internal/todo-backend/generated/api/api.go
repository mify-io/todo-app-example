// THIS FILE IS AUTOGENERATED, DO NOT EDIT
// Generated by mify via OpenAPI Generator

// vim: set ft=go:
package openapi

import (
	"example.com/namespace/todo-app/go-services/internal/todo-backend/generated/core"
	"net/http"
)

// hack to keep imports used if there are no routes in api
var _ *http.Request
var _ *core.MifyRequestContext

// TodosApiRouter defines the required methods for binding the api requests to a responses for the TodosApi
// The TodosApiRouter implementation should parse necessary information from the http request,
// pass the data to a TodosApiServicer to perform the required actions, then write the service results to the http response.
type TodosApiRouter interface {
	TodosGet(http.ResponseWriter, *http.Request)
	TodosPost(http.ResponseWriter, *http.Request)
}

// TodosIdApiRouter defines the required methods for binding the api requests to a responses for the TodosIdApi
// The TodosIdApiRouter implementation should parse necessary information from the http request,
// pass the data to a TodosIdApiServicer to perform the required actions, then write the service results to the http response.
type TodosIdApiRouter interface {
	TodosIdDelete(http.ResponseWriter, *http.Request)
	TodosIdGet(http.ResponseWriter, *http.Request)
	TodosIdPut(http.ResponseWriter, *http.Request)
}

// TodosApiServicer defines the api actions for the TodosApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TodosApiServicer interface {
	TodosGet(*core.MifyRequestContext) (ServiceResponse, error)
	TodosPost(*core.MifyRequestContext, TodoNoteCreateRequest) (ServiceResponse, error)
}

// TodosIdApiServicer defines the api actions for the TodosIdApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type TodosIdApiServicer interface {
	TodosIdDelete(*core.MifyRequestContext, int64) (ServiceResponse, error)
	TodosIdGet(*core.MifyRequestContext, int64) (ServiceResponse, error)
	TodosIdPut(*core.MifyRequestContext, int64, TodoNoteUpdateRequest) (ServiceResponse, error)
}
